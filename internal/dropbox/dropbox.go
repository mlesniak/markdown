package dropbox

import (
	"github.com/labstack/echo/v4"
	"strings"
)

// Service contains the necessary data to access a dropbox.
type Service struct {
	AppSecret     string
	Token         string
	RootDirectory string
	Log           echo.Logger
	// Since we have only one account, the cursor is part of the service.
	cursor string
	queue  chan string
}

type entry struct {
	Tag  string `json:".tag"`
	Name string `json:"name"`
}

// New returns a new dropbox service.
//
// The token is either generated by the normal OAuth2 workflow from
// dropbox or a token manually generated using the app console for your
// specific application.
//
// The rootDirectory is the root for all accessed files.
func New(s Service) *Service {
	// TODO Complaing instead of automagically fixing.
	if !strings.HasSuffix(s.RootDirectory, "/") {
		s.RootDirectory = s.RootDirectory + "/"
	}
	s.queue = make(chan string)

	return &s
}

func (s *Service) UpdateFiles(filenames ...string) {
	for _, filename := range filenames {
		go func() {
			s.Log.Infof("Adding to queue filename=%s", filename)
			s.queue <- filename
		}()
	}
}

func (s *Service) Start() {
	go func() {
		s.Log.Info("Starting update queue watching...")
		for {
			filename := <-s.queue
			s.Log.Infof("Updating file %s", filename)
		}
	}()
}
